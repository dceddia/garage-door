var gpio = require('gpio');
var noop = function() {};
var q = require('q');

var stateChangeFn = noop;
var pinReady = false;
var door_state_pin;

// Turn a state value into a string
var _resolve = function(val) {
  return val == 0 ? 'closed' : 'open';
};

var _init = function() {
	door_state_pin = gpio.export(18,
		{
			direction: 'in',
			ready: function() {
				pinReady = true;
				console.log('the pin is ready');
			}
		});

	door_state_pin.on('change', function(val) {
		// The value is inverted. When the magnet is present, it reads 0.
		//   (0 == door closed, 1 == door open)
                stateChangeFn(_resolve(val));
	});
};

var _state = function() {
	var deferred = q.defer();

	if(pinReady) {
		door_state_pin.get(function(val) {
			deferred.resolve(_resolve(val));
		});
	} else {
		deferred.resolve(-1);
	}

	return deferred.promise;
};

var _on_change = function(callback) {
	stateChangeFn = callback;
};

exports.on_change = _on_change;
exports.state = _state;
exports.init = _init;
